<?php
// $Id$
function onlinerecord_perm()
{
  return array('administer onlinerecord','access onlinerecord');
}

function onlinerecord_menu()
{
  //@TODO @REFACTOR We need to change arg(n) calls in functions foo()
  //  to
  //function foo(n)
    $items=array();

    //Add main onlinerrecord settings pages
    $items['admin/settings/onlinerecord'] = array(
      'title' => 'OnlineRecord',
      'page callback' =>  'onlinerecord_form',
      //'page arguments' => array('onlinerecord_form'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
    );

    /////////////////////////// Organizations //////////////////////////////////
    //Add orgs main page
    $items['admin/settings/onlinerecord/orgs'] = array(
      'title' => 'OnlineRecord organizations',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_orgs_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add orgs add-page
    $items['admin/settings/onlinerecord/orgs/add'] = array(
      'title' => 'Add organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add orgs edit-page
    $items['admin/settings/onlinerecord/orgs/%/edit'] = array(
      'title' => 'Edit organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_edit',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add orgs delete-page
    $items['admin/settings/onlinerecord/orgs/%/delete'] = array(
      'title' => 'Delete organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    /////////////////////////// Departments ////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/depts'] = array(
      'title' => 'OnlineRecord departments',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_depts_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add depts add-page
    $items['admin/settings/onlinerecord/depts/add'] = array(
      'title' => 'Add department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts edit-page
    $items['admin/settings/onlinerecord/depts/%/edit'] = array(
      'title' => 'Edit department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_edit',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts delete-page
    $items['admin/settings/onlinerecord/depts/%/delete'] = array(
      'title' => 'Delete department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );
    //

    ////////////////////////////// Plans ///////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/plans'] = array(
      'title' => t('OnlineRecord Plans'),
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_plans_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add depts add-page
    $items['admin/settings/onlinerecord/plans/add'] = array(
      'title' => 'Add plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts edit-page
    $items['admin/settings/onlinerecord/plans/%/edit'] = array(
      'title' => 'Edit plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_edit',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts delete-page
    $items['admin/settings/onlinerecord/plans/%/delete'] = array(
      'title' => 'Delete plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    //////////////////////////// Exceptions ////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/plans/%/exceptions'] = array(
      'title' => 'Exceptions',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_exceptions_per_plan_list',4),
      //'page callback' =>  'onlinerecord_plans_list',
      'page callback' =>  'onlinerecord_exceptions_per_plan_list',
      'page arguments' => array(4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc'
    );

    $items['admin/settings/onlinerecord/plans/%/exceptions/add'] = array(
      'title' => 'Add exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_per_plan_add',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_add',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => -10
    );

    $items['admin/settings/onlinerecord/exceptions'] = array(
      'title' => 'Exceptions',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_exceptions_per_plan_list',4),
      //'page callback' =>  'onlinerecord_plans_list',
      'page callback' =>  'onlinerecord_exceptions_list',
      'page arguments' => array(4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc'
    );

    $items['admin/settings/onlinerecord/exceptions/%/edit'] = array(
      'title' => 'Edit exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_edit',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_add',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => -5
    );

    $items['admin/settings/onlinerecord/exceptions/%/delete'] = array(
      'title' => 'Delete exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_form_delete_confirm',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_delete',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => 0
    );
    //////////////////////////////////Services//////////////////////////////////
     //Add services main page
    $items['admin/settings/onlinerecord/services'] = array(
      'title' => 'OnlineRecord services',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_services_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add services add-page
    $items['admin/settings/onlinerecord/services/add'] = array(
      'title' => 'Add service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services edit-page
    $items['admin/settings/onlinerecord/services/%/edit'] = array(
      'title' => 'Edit service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_edit',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services delete-page
    $items['admin/settings/onlinerecord/services/%/delete'] = array(
      'title' => 'Delete service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    ///////////////////////////////PLANS - SERVICES/////////////////////////////
     //Add services main page
    $items['admin/settings/onlinerecord/plans_services'] = array(
      'title' => 'OnlineRecord services',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_plans_services_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add services add-page
    $items['admin/settings/onlinerecord/plans_services/add'] = array(
      'title' => 'Add service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_services_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services delete-page
    $items['admin/settings/onlinerecord/plans_services/%/%/delete'] = array(
      'title' => 'Delete service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_services_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );


    ///////////////////////////////USERS - PLANS /////////////////////////////
     //Add services main page
    $items['admin/settings/onlinerecord/users_plans'] = array(
      'title' => 'OnlineRecord Users - Plans',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_users_plans_list',
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add users-plans add-page
    $items['admin/settings/onlinerecord/users_plans/add'] = array(
      'title' => 'Add users-plans',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_users_plans_form_add'),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add users-plans delete-page
    $items['admin/settings/onlinerecord/users_plans/%/%/delete'] = array(
      'title' => 'Delete users-plans',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_users_plans_form_delete_confirm',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    ////////////////////////////////////////////////////////////////////////////
    //Plans
    $items['admin/settings/onlinerecord/plans/%/view'] = array(
      'title' => 'View plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_view',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );
    $items['admin/settings/onlinerecord/plans/%/view/callback1'] = array(
      'page callback' => 'onlinerecord_plans_form_view_callback1',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );
    $items['admin/settings/onlinerecord/plans/%/view/callback2'] = array(
      'page callback' => 'onlinerecord_plans_form_view_callback2',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );

    //Cloning plans with all exceptions
    $items['admin/settings/onlinerecord/plans/%/clone'] = array(
      'title' => 'Clone plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_clone',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );


    /////////////////CHOOSE Service->Plans->Exceptions->records/////////////////
    $items['onlinerecord'] = array(
      'title' => 'Onlinerecord',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_choose'),
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      //'file' => 'onlinerecord.admin.inc',
    );
    $items['onlinerecord1'] = array(
      'title' => 'View plan records by user',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_records_by_user_view',4),
      'access arguments' => array('administer onlinerecord'),
      'type' => MENU_LOCAL_TASK,
      //'file' => 'onlinerecord.admin.inc',
    );
    $items['onlinerecord1/callback1'] = array(
      'page callback' => 'onlinerecord_records_by_user_view_callback1',
      'access callback' => TRUE,
      //'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );
    $items['onlinerecord1/callback2'] = array(
      'page callback' => 'onlinerecord_records_by_user_view_callback2',
      'access callback' => TRUE,
      //'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );

    $items['onlinerecord-wizard'] = array(
      'title' => 'onlinerecord-wizard',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_wizard'),
      'page callback' => 'onlinerecord_wizard',
      'access arguments' => array('access content'),
      //'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Does the very standard things that must be done in any normal callback.
 * Used by each callback in this example module.
 */
function onlinerecord_form()
{
    $tableHeader = array('Onlinerecord');
    $tableData = array();
    $tableData[] = array(l('Orgs' , 'admin/settings/onlinerecord/orgs/',array('alias'=>true)));
    $tableData[] = array(l('Depts' , 'admin/settings/onlinerecord/depts/',array('alias'=>true)));
    $tableData[] = array(l('Plans' , 'admin/settings/onlinerecord/plans/',array('alias'=>true)));
    $tableData[] = array(l('Exceptions' , 'admin/settings/onlinerecord/exceptions/',array('alias'=>true)));
    $tableData[] = array(l('Services' , 'admin/settings/onlinerecord/services/',array('alias'=>true)));
    $tableData[] = array(l('Plans-Services' , 'admin/settings/onlinerecord/plans_services/',array('alias'=>true)));
    $tableData[] = array(l('Users-Plans' , 'admin/settings/onlinerecord/users_plans/',array('alias'=>true)));
    return theme('table', $tableHeader, $tableData);
}

function onlinerecord_choose($form_state)
{
  // Check third page
  //dpm($form_state['values']['clicked_button']);
  if (isset($form_state['storage']['page_three']))
  {
    $form['name'] =  array(
      '#title' => t('FIO'),
      '#type' => 'textfield',
      '#default_value' =>'',
    );
    /*
    $form['birthyear'] =  array(
      '#type' => 'textfield',
      '#title' => t('Date of birth'),
      '#default_value' =>'',
    );
     *
     */

    $form['submit'] =  array(
      '#type' => 'submit',
      '#value' => t('Save'),
      '#name' => 'savebutton',
      '#id' =>'savebutton_step3',
    );
    // Check second page
  } else {
    if (isset($form_state['storage']['page_two'])) {
        global $user;
        //dpm($user);
        $uid=$user->uid;

        $vals=onlinerecord_choose_callback2();
        $form=array();
        //Add header for table_theme
        $form['header'] = array(
          '#type' => 'value',
          '#value' => array(
             //array('data' => '#', 'field' => 'kvant_number'),
             //array('data' => 'Время', 'field' => 'time'),
             //array('data' => t('Make an appointment'), 'field' => 'button'),
             array('data' => t('time')),
             array('data' => t('-')),
          ),
        );

        $form['plan_id']['#tree']=TRUE;
        $form['plan_header']['#tree']=TRUE;
        $form['time_val']['#tree']=TRUE;
        $form['kvant_number']['#tree']=TRUE;
        foreach ($vals as $val)
        {
          if ($val[5]!=-1)
          {
              $form['plan_id'][$val[4]] = array('#type' => 'value','#value' =>$val[0][0]);
              $form['plan_header'][$val[4]] = array('#type' => 'value','#value' =>$val[1][0]);
              $form['time_val'][$val[4]] = array('#type' => 'value','#value' => $val[3]);

              $form['time'][$val[4]] = array('#value' =>$val[2]);
              //$form['time_value'][$val[4]] = array('#value' => $val[3]);
              //$form['kvant_number'][$val[4]] = array('#value' => $val[4]);
              $form['kvant_number'][$val[4]] = array('#type' => 'value','#value' => $val[4]);
              if (!empty($val[0])&&(1==1))
              {
                $form['button'][$val[4]] =  array(
                    '#type' => 'submit',
                    '#value' => t('Make an appointment'),
                    '#name' => 'button_'.$val[4],
                    '#id' => 'save_step2',

                );
              } else {
                $form['button'][$val[4]] =  array('#value' => "-");
              }
          }
          $i++;
        }
    } else // this is first page
    {
        $result=db_query('SELECT service_id, name, cabinet FROM {onlinerecord_services}');
       
        $services=array();
        $services[0]='---';
        $i=0;
        while ($service=db_fetch_array($result)) {
          $i=intval($service['service_id']);
          $services[$i]=$service['name'];
        }

        $default_choose_service_id = !empty($form_state['values']['choose_service_id']) ? $form_state['values']['choose_service_id'] : 0;
        $form['choose_service_id'] = array(
          '#title' => t('Select service'),
          '#type' => 'select',
          '#options' => $services,
          '#default_value' => $default_choose_service_id,
        );
        $dateformat='Y-m-d';
        $datef=date($dateformat, (time()+86400));

        $form['choose_date'] = array(
          '#title' => t('Enabled on'),
          '#type' => 'date_popup',
          '#default_value' => $datef,
          '#date_format' => $dateformat,
          '#datepicker_options' => array('minDate' => 0,'maxDate' => '+28D'),
          //'#datepicker_options' => array('minDate' => 0,'maxDate' => '+28D'),
        );

        $form['next'] = array(
          '#type' => 'submit',
          '#value' => t('Next >>'),
          '#name' => 'NextButton',
          '#id' =>'save_step1',
        );
    }
  }

  return $form;

}

function onlinerecord_choose_validate($form, &$form_state) {
     // Validate page 2 here
  if (isset($form_state['storage']['page_three'])) {

    $recordname= $form_state['values']['name'];
    if (!$recordname) {
        form_set_error('name', t('Please enter your FIO.'));
    }
    /*
    $birthyear= $form_state['values']['birthyear'];
    if (!$birthyear) {
        form_set_error('birthyear', t('Please enter your birthday date.'));
    }
     */
  } else {
      if (isset($form_state['storage']['page_two'])) {

      } else {
        $choose_service_id=$form_state['values']['choose_service_id'];
        if (!$choose_service_id)
            form_set_error('choose_service_id', t('Please choose service.'));

        $choose_date=$form_state['values']['choose_date'];
        $dateformat='Y-m-d';
        $datef=date($dateformat, (time()+86400));
        if (strtotime($choose_date)<strtotime($datef))
        {
            form_set_error('choose_date', t('Please select date correctly. You can choose only !datef or later',array('!datef' => $datef)));
        }
      }
  }
}

function onlinerecord_choose_submit($form, &$form_state)
{
  $num=explode('_',$form_state['clicked_button']['#name']);
  // Second submit
  //dpm ($form_state['clicked_button']);
  if ($form_state['clicked_button']['#id'] == 'save_step2')
  {
    $form_state['storage']['page_three'] = TRUE;
    $page_one_values = $form_state['storage']['page_one_values'];
    $form_state['storage']['page_two_values'] = $form_state['values'];
    $form_state['storage']['pressed_button'] = (int)($num[1]);

    $form_state['storage']['plan_id'] = $form_state['values']['plan_id'][(int)($num[1])];
    $form_state['storage']['plan_header'] = $form_state['values']['plan_header'][(int)($num[1])];
    $form_state['storage']['time_val']=$form_state['values']['time_val'][(int)($num[1])];
    $form_state['storage']['kvant_number']=$form_state['values']['kvant_number'][(int)($num[1])];


  } // First submit server
  elseif($form_state['clicked_button']['#id'] == 'save_step1') {
    $form_state['storage']['page_two'] = TRUE;
    $form_state['storage']['page_one_values'] = $form_state['values'];
    unset($form_state['clicked_button']);
  }
  // Handle page 2 submissions.
  else
  {
    $page_one_values = $form_state['storage']['page_one_values'];
    $page_two_values = $form_state['storage']['page_two_values'];


    $choose_service_id=intval($page_one_values['choose_service_id']);
    $choose_date=$page_one_values['choose_date'];
    $result=db_query('Select redirect FROM {onlinerecord_services} where service_id=%d',$choose_service_id );
      $redirect = db_fetch_object($result);

    $plan_id=intval($form_state['storage']['plan_id']);
    $plan_header=$form_state['storage']['plan_header'];
    $time_val=intval($form_state['storage']['time_val']);
    $kvantn=intval($form_state['storage']['kvant_number']);
    $name=$form_state['values']['name'];
    /*$birthyear=$form_state['values']['birthyear'];

    $result=db_query("INSERT INTO {onlinerecord_records}
      (recorddate,services_id,plan_id,kvant,name,birthyear)
      VALUES (%d,%d,%d,%d,'%s','%s')",
      strtotime($choose_date),$choose_service_id,$plan_id,$kvant_number,$name,$birthyear);
     */
    $result=db_query("INSERT INTO {onlinerecord_records}
      (recorddate,services_id,plan_id,kvant,name)
      VALUES (%d,%d,%d,%d,'%s')",
      strtotime($choose_date),$choose_service_id,$plan_id,$time_val,$name);
    $inserted_id=intval(db_result(db_query('SELECT LAST_INSERT_ID()')));
    //$num_id=$kvantn.'-'.$inserted_id;
    $num_id=$inserted_id;

    drupal_set_message(
      t('You\'ve been saved on time @time. @planh, your number is @num',
        array(
          '@time'=>strval((int)($time_val/3600)).":".str_pad(strval((int)(($time_val%3600)/60)),2,'0',STR_PAD_LEFT),//time in format hh:mm,
          '@planh'=>$plan_header,
          '@num'=>$num_id,
          )

          )
    );
    //$form_state['redirect'] = 'node';
    unset($form_state['storage']);
    $form_state['redirect']=$redirect->redirect;
  }
}

function onlinerecord_choose_callback2()
{
  $choosed_date='---';
  if (isset($_POST['choose_date']))
    $choosed_date=check_plain($_POST['choose_date']['year']).'-'.$_POST['choose_date']['month'].'-'.$_POST['choose_date']['day'];
  if (isset($_POST['choose_service_id']))
    $choose_service_id=intval($_POST['choose_service_id']);
  $ch_t=strtotime($choosed_date);

  $result=db_query('SELECT p.plan_id, p.name AS planname, p.kvant_value, p.worktimestart, p.worktimefinish,
    d.name AS deptname, o.name AS orgname, p.enabled_date, p.disabled_date
    FROM {onlinerecord_plans_services} ps, {onlinerecord_plans} p, {onlinerecord_organizations} o, {onlinerecord_departments} d
    WHERE ps.plan_id=p.plan_id
    AND p.dept_id=d.dept_id AND d.org_id=o.org_id
    AND ps.service_id=%d
    AND p.enabled_date<=%d AND %d<=p.disabled_date',$choose_service_id,$ch_t,$ch_t);
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));

  $dateformat='Y-m-d';

  $i=0;
  $tableData =array();
  $tableHeader= array('pid', 'header_table','wts','wtf','kv','edate','ddate',
    'kvant_number', 'time', 'time_cmp','except_id', 'type','actions');
  $pids=array();

  while ($pid = db_fetch_object($result))
    {
        $arg=$pid->plan_id;
        //$header_table=$pid->planname." at ".$pid->deptname.", ".$pid->orgname;
        $header_table=t('@deptname , @orgname',
          array(
            '@deptname'  => $pid->deptname,
            '@orgname'  =>$pid->orgname)
        );
        $wts=$pid->worktimestart;
        $wtf=$pid->worktimefinish;
        $kvant_value=$pid->kvant_value;
        $edate=$pid->enabled_date;
        $ddate=$pid->disbled_date;
        {
        // Get all exceptions from choosen plan
          $result2=db_query("SELECT e.except_id, e.type, e.time_start, e.time_stop, e.daynumber, e.dateofexcept
            FROM {onlinerecord_exceptions} e
            WHERE e.plan_id in ('%s')
            ORDER BY plan_id",$arg);
          $j=0;
          $excepts=array();
          //exceptions to array
          while ($except = db_fetch_object($result2))
          {
            $excepts[$j++]=$except;
          }
          $exceptscount=$j;

          $result3=db_query("SELECT plan_id, kvant
            FROM {onlinerecord_records}
            WHERE plan_id in ('%s')
            AND recorddate=%d
            ORDER BY plan_id",$arg,$ch_t);
          $j=0;
          $records=array();
          //exceptions to array

          while ($record = db_fetch_object($result3))
          {
              $records[intval($record->kvant)]=true;
          }
          $n=($wtf-$wts)/($kvant_value*60);

          for ($k=0;$k<$n;$k++)
          {
            $temp=$wts+$k*$kvant_value*60;
            $flag=true;
            //check exceptions for current time
            $excepts_ids="";
            $excepts_types="";
            for ($j=0;$j<$exceptscount;$j++)
            {
              //get excepts date
              $tstart=intval($excepts[$j]->time_start);
              $tstop=intval($excepts[$j]->time_stop);
              $dn=intval($excepts[$j]->daynumber);
              $dateofe=intval($excepts[$j]->dateofexcept);

              //type of exceptions processing
              switch (intval($excepts[$j]->type)) {
                case 1:
                  // try beetwen exception time
                  if (($tstart<=$temp)&&($temp<=$tstop))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 2:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&($chd==$dn))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 5:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&(strtotime($choosed_date)==$dateofe))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
              }
            }
            $valuetoseeTD=0;
            if ($flag)
            {
                $valuetoseeTD=((!$records[$temp]) ? 1 :0);
            } else $valuetoseeTD=-1;
            //InputData
            $tableData[] = array(
              $arg,//plan_id
              $header_table,//dept org
              $wts,//work_time_start
              $wtf,//work_time_finish
              $kvant_value,
              $edate,//enabled date
              $ddate,//disabled date

              $k,// Kvant number
              strval((int)($temp/3600)).":".str_pad(strval((int)(($temp%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp,//time in seconds
              $excepts_ids,
              $excepts_types,
              (($flag)&&(!$records[$temp])) ? 1 :0,//time in seconds
              $valuetoseeTD,
            );
          }
        }
    }
    //dpm(array_search(0, array(-1,-1,-1)));
    usort($tableData,'onlinerecord_func_timecompare');
    $display_array=array();
    $flag=true;
    $counter=0;
    $counter2=0;
    $temp_time=-1;
    $i=0;
    //Sortirovka dannih
    $valuestosee_array=array();
    foreach ($tableData as $arr_str)
    {
        $i++;
        if ($arr_str[9]!=$temp_time) {
            $flag=false;

        }
        if ($flag)  {
            if ($arr_str[12]==1)    {
                $plans_ids_array[$counter]=$arr_str[0];
                $header_tables_array[$counter]=$arr_str[1];
                $counter++;
            }
            else $valuestosee_array[$counter2++]=$arr_str[13];
        } else {
            if ($temp_time!=-1)
                {
                $valtosave=0;
                if (!empty($plans_ids_array))
                    $valtosave=1;
                else {
                    if (array_search(0, $valuestosee_array)!=true) $valtosave=-1;
                    else $valtosave=0;
                }

                    $display_array[]=array(
                      $plans_ids_array,//plan_id
                      $header_tables_array,//dept org
                      strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
                      $temp_time,//time in seconds
                      $arr_str[7],//@TODO @BUG: different quants possible
                      $valtosave,
                      );
                }
            $flag=true;
            $counter=0;

            $plans_ids_array=array();//plan_id
            $header_tables_array=array();//plan display name
            $valuestosee_array=array();//

            $temp_time=$arr_str[9];
            if ($arr_str[12]==1)    {
              $plans_ids_array[$counter]=$arr_str[0];
              $header_tables_array[$counter]=$arr_str[1];
              $counter++;
            }
            else $valuestosee_array[$counter2++]=$arr_str[13];
        }
    }
    $valtosave=0;
    if (!empty($plans_ids_array))
        $valtosave=1;
    else {
        if (array_search(0, $valuestosee_array)!=true) $valtosave=-1;
        else $valtosave=0;
    }

    $display_array[]=array(
              $plans_ids_array,//plan_id
              $header_tables_array,//dept org
              strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp_time,//time in seconds
              $arr_str[7]+1,//@TODO @BUG: different quants possible
              $valtosave,
              );
    return $display_array;
}

function onlinerecord_func_timecompare($val1,$val2)
{
  if ($val1[9]==$val2[9]) return 0;
  else return ($val1[9]<$val2[9]) ? -1 :1;
}



/**
 * Реализация hook_theme()
 * Регистрируем функцию темизации формы mymodule_form_table
 */

function onlinerecord_theme() {
  return array(
    'onlinerecord_choose' => array(
      'arguments' => array('form' => NULL),
    ),
    'onlinerecord_step3_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function theme_onlinerecord_choose($form) {
  $rows = array();
  foreach (element_children($form['kvant_number']) as $key) {
    $rows[] = array(
      //drupal_render($form['kvant_number'][$key]), // дата создания
      drupal_render($form['time'][$key]),
      //drupal_render($form['time_value'][$key]),   // заголовок

      drupal_render($form['button'][$key])
    );
  }

  $output = theme('table', $form['header']['#value'], $rows); // выводим таблицу
  $output .= drupal_render($form);                            // выводим остальную часть формы

  return $output;
}

function theme_onlinerecord_step3_form($form) {
  $rows = array();
  foreach (element_children($form['kvant_number']) as $key) {
    $rows[] = array(
      //drupal_render($form['kvant_number'][$key]), // дата создания
      drupal_render($form['time'][$key]),
      //drupal_render($form['time_value'][$key]),   // заголовок

      drupal_render($form['button'][$key])
    );
    
  }

  $output = theme('table', $form['header']['#value'], $rows); // выводим таблицу
  $output .= drupal_render($form);                            // выводим остальную часть формы

  return $output;
}
////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// plans view ////////////////////////////////////
function onlinerecord_records_by_user_view(&$form_state)
{
  $dateformat='Y-m-d';
  $datef=date($dateformat);

  $default_choose_date = !empty($form_state['values']['choose_date']) ? $form_state['values']['choose_date'] : $datef;
  //dpm($default_choose_date);

  $form['choose_date'] = array(
      '#title' => t('Enabled on'),
      '#type' => 'date_select',
      '#default_value' => $default_choose_date,
      '#date_format' => $dateformat,
      '#date_timezone' => 'Asia/Novosibirsk',
      '#date_increment' => $kvant_value,
      '#date_year_range' => '0:+1',
      '#attributes' => array('class' => 'date-dropdown'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Load'),
    '#ahah' => array(
        'path' => 'onlinerecord1/callback1',
        'wrapper' => 'dependent_dropdown_holder',
      ),
  );

  $form['dependent_dropdown_holder'] = array(
    '#value' => '<div id="dependent_dropdown_holder">?</div>'
  );

 return $form;
}

//function onlinerecord_records_by_user_view_callback2($form,&$form_state)
function onlinerecord_records_by_user_view_callback2()
{
  //dpm($_POST['choose_date']);
  if (isset($_POST['choose_date']))
    $choosed_date=check_plain($_POST['choose_date']['year']).'-'.$_POST['choose_date']['month'].'-'.$_POST['choose_date']['day'];
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));
  drupal_json(array('status' => TRUE, 'data' => $choosed_date."=".strtotime($choosed_date)));

}

function onlinerecord_records_by_user_view_callback1()
{
  global $user;
  $uid=$user->uid;

    $choosed_date='---';
  if (isset($_POST['choose_date']))
    $choosed_date=check_plain($_POST['choose_date']['year']).'-'.$_POST['choose_date']['month'].'-'.$_POST['choose_date']['day'];

  $ch_t=strtotime($choosed_date);

  $result=db_query('SELECT p.plan_id, p.name AS planname, p.kvant_value, p.worktimestart, p.worktimefinish,
    d.name AS deptname, o.name AS orgname, p.enabled_date, p.disabled_date
    FROM {onlinerecord_users_plans} ups, {onlinerecord_plans} p, {onlinerecord_organizations} o, {onlinerecord_departments} d
    WHERE ups.plan_id=p.plan_id
    AND p.dept_id=d.dept_id AND d.org_id=o.org_id
    AND ups.user_id=%d
    AND p.enabled_date<=%d AND %d<=p.disabled_date',$uid,$ch_t,$ch_t);
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));

  $dateformat='Y-m-d';

  $i=0;
  $tableData =array();

  $pids=array();
  $tableHeader = array('#', t('Time'),t('Record'),t('Service'),'except_id', t('type'),'-','-','-',t('time'));
  $tableData = array();


  while ($pid = db_fetch_object($result))
  {
    $i++;
    $arg=$pid->plan_id;
        //$header_table=$pid->planname." at ".$pid->deptname.", ".$pid->orgname;
      $header_table=t('@deptname , @orgname',
        array(
          '@deptname'  => $pid->deptname,
          '@orgname'  =>$pid->orgname)
      );
      $wts=$pid->worktimestart;
      $wtf=$pid->worktimefinish;
      $kvant_value=$pid->kvant_value;
      $edate=$pid->enabled_date;
      $ddate=$pid->disbled_date;
    // Get all exceptions from choosen plan
    $result2=db_query('SELECT e.except_id, e.type, e.time_start, e.time_stop, e.daynumber, e.dateofexcept
      FROM {onlinerecord_exceptions} e
      WHERE e.plan_id=%d',$arg);
    $i=0;
    $excepts=array();
    //exceptions to array
    while ($except = db_fetch_object($result2))
    {
      $excepts[$i++]=$except;
    }
    $exceptscount=$i;

    $result3=db_query("SELECT r.plan_id, r.kvant, r.name as recordname, r.birthyear, s.name as servicename
      FROM {onlinerecord_records} r, {onlinerecord_services} s
      WHERE r.plan_id =%d
      AND r.recorddate=%d
      AND r.services_id=s.service_id
      ORDER BY r.plan_id",$arg,strtotime($choosed_date));

    $services=array();
    $records_by_date=array();
    $records_by_date2=array();

    while ($record= db_fetch_object($result3))
    {
      $records_by_date[$record->kvant]=true;
      $records_by_date2[$record->kvant]=$record->recordname.", ".$record->birthyear;
      $services[$record->kvant]=$record->servicename;
    }

    //preparing table header
    //preparing count of kvants
    $n=($wtf-$wts)/($kvant_value*60);

    for ($i=0;$i<$n;$i++)
    {
      $temp=$wts+$i*$kvant_value*60;
      $flag=true;
      //check exceptions for current time
      $excepts_ids="";
      $excepts_types="";
      for ($j=0;$j<$exceptscount;$j++)
      {
        //get excepts date
        $tstart=intval($excepts[$j]->time_start);
        $tstop=intval($excepts[$j]->time_stop);
        $dn=intval($excepts[$j]->daynumber);
        $dateofe=intval($excepts[$j]->dateofexcept);

        //type of exceptions processing
        switch (intval($excepts[$j]->type)) {
          case 1:
            // try beetwen exception time
            if (($tstart<=$temp)&&($temp<=$tstop))
            {
              $flag=false;
              $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
              $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
            }
            break;
          case 2:
            if (($tstart<=$temp)&&($temp<=$tstop)&&($chd==$dn))
            {
              $flag=false;
              $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
              $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
            }
            break;
          case 5:
            if (($tstart<=$temp)&&($temp<=$tstop)&&(strtotime($choosed_date)==$dateofe))
            {
              $flag=false;
              $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
              $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
            }
            break;
        }
        //if ($flag!=true) break;
      }


      if (!$flag) $place=t("-");
      else
      {
        if (!$records_by_date[$temp]) $place=t("Free");
        else $place=$records_by_date2[$temp];
      }
      //InputData
      $tableData[] = array(
        $i,// Kvant number
        strval((int)($temp/3600)).":".str_pad(strval((int)(($temp%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
        $place,
        $services[$temp],
        $excepts_ids,
        $excepts_types,
        $header_table,//6
        NULL,//7
        NULL,//8
        $temp
      );
    }
    //drupal_json(array('status' => TRUE, 'data' => theme('table', $tableHeader, $tableData)));
    //dpm(array_search(0, array(-1,-1,-1)));
    usort($tableData,'onlinerecord_func_timecompare');
    $display_array=array();
    $display_header=array('#', t('Time'),t('Record'),t('Service'),t('Plan name'));
    $flag=true;
    $counter=0;
    $counter2=0;
    $temp_time=-1;
    $i=0;
    //Sortirovka dannih
    $valuestosee_array=array();
    foreach ($tableData as $arr_str)
    {
        $i++;
        $display_array[]=array(
          $i,//plan_id
          $arr_str[1],//time
          $arr_str[2],//record
          $arr_str[3],//service name
          $arr_str[6],
          );
    }
  }
  drupal_json(array('status' => TRUE, 'data' => theme('table', $display_header, $display_array)));
}


function onlinerecord_wizard()
{
  $step = arg(1);
    ctools_include('wizard');
    ctools_include('object-cache');

  $form_info = array(
    'id' => 'onlinerecord_form_cache',
    'path' => "onlinerecord-wizard/%step",
    'show trail' => TRUE,
    'show back' => TRUE,
    'show cancel' => true,
    'show return' =>false,
    'next text' => 'Proceed to next step',
    'next callback' =>  'onlinerecord_wizard_next',
    'finish callback' => 'onlinerecord_wizard_submit',
    'return callback' => 'onlinerecord_wizard_submit',
    'cancel callback' => 'onlinerecord_wizard_cancel',
    'order' => array(
      'step1' => t('Step 1: Service'),
      'step2' => t('Step 2: Datepicker'),
      'step3' => t('Step 3: Time'),
      'step4' => t('Step 4: Name'),
    ),
    'forms' => array(
      'step1' => array(
        'form id' => 'onlinerecord_step1_form'
      ),
      'step2' => array(
        'form id' => 'onlinerecord_step2_form'
      ),
      'step3' => array(
        'form id' => 'onlinerecord_step3_form'
      ),
      'step4' => array(
        'form id' => 'onlinerecord_step4_form'
      ),
    ),
  );

  // *** SETTING THE FORM UP FOR MULTISTEP *** //
  $form_state = array(
    'cache name' => NULL,
  );
  // no matter the step, you will load your values from the callback page
  $record = onlinerecord_wizard_get_page_cache(NULL);
  if (!$record) {
    // set form to first step -- we have no data
    $step = current(array_keys($form_info['order']));
    $record = new stdClass();
    ctools_object_cache_set('onlinerecord_form_cache', $form_state['cache name'], $record);
  }
  //THIS IS WHERE WILL STORE ALL FORM DATA
  $form_state['onlinerecord_obj'] = $record;

  // and this is the witchcraft that makes it work
  $output = ctools_wizard_multistep_form($form_info, $step, $form_state);
  return $output;
}

function onlinerecord_step1_form(&$form, &$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];
  $result=db_query('SELECT service_id, name, cabinet FROM {onlinerecord_services}');

  $services=array();
  $services[0]='---';
  $i=0;
  while ($service=db_fetch_array($result)) {
    $i=intval($service['service_id']);
    $services[$i]=$service['name'];
  }
  $default_choose_service_id = !empty($onlinerecord_form->choose_service_id) ? $onlinerecord_form->choose_service_id : 0;
  $form['choose_service_id'] = array(
    '#title' => t('Select service'),
    '#type' => 'select',
    '#options' => $services,
    '#default_value' => $default_choose_service_id,
  );
  $form_state['no buttons'] = TRUE;
}

function onlinerecord_step1_form_validate(&$form, &$form_state) {
  $choose_service_id=$form_state['values']['choose_service_id'];
  if (!$choose_service_id)
    form_set_error('choose_service_id', t('Please choose service.'));
}

/**
 * KEY CONCEPT: generally, you will never save data here -- you will simply add values to the
 * yet to be saved ctools_cache object.
 *
 * Saving happens at the end, within the $form_info['finish callback'];
 */
function onlinerecord_step1_form_submit(&$from, &$form_state) {
  //dpm($form_state);
  $form_state['onlinerecord_obj']->choose_service_id = $form_state['values']['choose_service_id'];
}

function onlinerecord_step2_form(&$form, &$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];

  $dateformat='Y-m-d';
  $datef1=strtotime(date($dateformat, (time()+86400)));
  $datef2=strtotime(date($dateformat, (time()+28*86400)));

  $result=db_query('SELECT p.plan_id, p.name AS planname, p.kvant_value, p.worktimestart, p.worktimefinish,
    d.name AS deptname, o.name AS orgname, p.enabled_date, p.disabled_date
    FROM {onlinerecord_plans_services} ps, {onlinerecord_plans} p, {onlinerecord_organizations} o, {onlinerecord_departments} d
    WHERE ps.plan_id=p.plan_id
    AND p.dept_id=d.dept_id AND d.org_id=o.org_id
    AND ps.service_id=%d
    AND p.enabled_date<=%d AND %d<=p.disabled_date',
    intval($onlinerecord_form->choose_service_id),$datef1,$datef1);//@TODO @BUG Intersect of lines
    
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));

  $plans=array();
  $restricted_dates=array();
  $i=0;
  while ($pid = db_fetch_object($result))
  {
      $arg=$pid->plan_id;
      $result2=db_query("SELECT e.except_id, e.type, e.time_start, e.time_stop, e.daynumber, e.dateofexcept
        FROM {onlinerecord_exceptions} e
        WHERE e.plan_id in ('%s')
        ORDER BY plan_id",$arg);
      $j=0;
      $excepts=array();
      //exceptions to array
      while ($except = db_fetch_object($result2))
      {
        $excepts[$j++]=$except;
      }
      $exceptscount=$j;
      $plans[$i]=array($pid,$excepts);
  }

  //$plans_count=count($plans);
  //while ($pid = db_fetch_object($result))
  $time1=microtime();
  
  for ($i=$datef1;$i<=$datef1+(28*86400);$i=$i+86400)
  {
    $flag=false;
    //Try to use all plans
    foreach ($plans as $pid)
    {
      $flag=false;
      $plan_id=$pid[0]->plan_id;
      $wts=$pid[0]->worktimestart;
      $wtf=$pid[0]->worktimefinish;
      $kvant_value=$pid[0]->kvant_value;
      $edate=$pid[0]->enabled_date;
      $ddate=$pid[0]->disbled_date;

      $excepts=$pid[1];
      $times_array=range(0,($wtf-$wts)/($kvant_value*60)-1);
      //Try to find number of free quants for day for current plan
      foreach ($excepts as $except)
      {
        $temp=array();
        switch (intval($except->type)) {
          case 1://Everyday exception
            $temp=range(($except->time_start-$wts)/($kvant_value*60),($except->time_stop-$wts)/($kvant_value*60));
            $times_array=array_diff($times_array,$temp);
            break;
          case 2://everyweek exception
            if (intval($except->daynumber)==date('N',$i)) {
              $temp=range(($except->time_start-$wts)/($kvant_value*60),($except->time_stop-$wts)/($kvant_value*60));
              $times_array=array_diff($times_array,$temp);
            }
            break;
          case 5://custom date
            if (intval($except->dateofexcept)==intval($i)) {
              $temp=range(($except->time_start-$wts)/($kvant_value*60),($except->time_stop-$wts)/($kvant_value*60));
              $times_array=array_diff($times_array,$temp);
            }
            // try beetwen exception time
            break;
      
        }
        //@TODO @DECISION Do we need to insert for empty array???
        if (empty($times_array))
        {
          $flag=true;
          break;
        }
      }
      if ($flag) {
        break;
      }

    }
    if ($flag) {
      $restricted_dates['t'.$i]=date($dateformat,$i);
      }
    //dpm('plan_id='.$plan_id.', '.date($dateformat,$i).'='.count($times_array));
  }
  $settings['restricted_dates']=$restricted_dates;
  drupal_add_js(array ('onlinerecord'=>$settings),'setting');
  drupal_add_js(drupal_get_path('module','onlinerecord').'/onlinerecord.js');

  $time2=microtime();
  //dpm($time2-$time1);

  $default_date = !empty($onlinerecord_form->choose_date) ? $onlinerecord_form->choose_date : '';
  $form['choose_date'] = array(
    '#title' => t('Enabled on'),
    '#type' => 'date_popup',
    '#default_value' => $default_date,
    '#date_format' => $dateformat,
    '#datepicker_options' => array('minDate' => 1,'maxDate' => '+28D'),
  );

  $form_state['no buttons'] = TRUE;
}

function onlinerecord_step2_form_validate(&$form, &$form_state) {
  $choose_date=$form_state['values']['choose_date'];
  $dateformat='Y-m-d';
  $datef=date($dateformat, (time()+86400));
  if (strtotime($choose_date)<strtotime($datef))
  {
      form_set_error('choose_date', t('Please select date correctly. You can choose only !datef or later',array('!datef' => $datef)));
  }
}

function onlinerecord_step2_form_submit(&$from, &$form_state) {
  $form_state['onlinerecord_obj']->choose_date = $form_state['values']['choose_date'];
}


function onlinerecord_step3_form(&$form, &$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];

  $choosed_date=$onlinerecord_form->choose_date;
  $choose_service_id=$onlinerecord_form->choose_service_id;
  $vals=onlinerecord_choose_callback3($choosed_date, $choose_service_id);

  $form['header'] = array(
    '#type' => 'value',
    '#value' => array(
           //array('data' => '#', 'field' => 'kvant_number'),
           //array('data' => 'Время', 'field' => 'time'),
           //array('data' => t('Make an appointment'), 'field' => 'button'),
    array('data' => t('time')),
    array('data' => t('-')),
    ),
  );

  $form['plan_id']['#tree']=TRUE;
  $form['plan_header']['#tree']=TRUE;
  $form['time_val']['#tree']=TRUE;
  $form['kvant_number']['#tree']=TRUE;
  $form['button']['#tree']=TRUE;
  foreach ($vals as $val)
  {
    if ($val[5]!=-1)
    {
        $form['plan_id'][$val[4]] = array('#type' => 'value','#value' =>$val[0][0]);
        $form['plan_header'][$val[4]] = array('#type' => 'value','#value' =>$val[1][0]);
        $form['time_val'][$val[4]] = array('#type' => 'value','#value' => $val[3]);

        $form['time'][$val[4]] = array('#value' =>$val[2]);
        //$form['time_value'][$val[4]] = array('#value' => $val[3]);
        //$form['kvant_number'][$val[4]] = array('#value' => $val[4]);
        $form['kvant_number'][$val[4]] = array('#type' => 'value','#value' => $val[4]);
        if (!empty($val[0])&&(1==1))
        {
          $form['button'][$val[4]] =  array(
              '#type' => 'submit',
              '#value' => t('Make an appointment'),
              '#name' => 'button_'.$val[4],
              '#id' => 'save_step2',
              '#next' => 'step4',
              '#wizard type' => 'next',
          );
        } else {
          $form['button'][$val[4]] =  array('#value' => "-");//
        }
    }
    $i++;
  }
}
function onlinerecord_step3_form_submit(&$from, &$form_state) {
  $num=explode('_',$form_state['clicked_button']['#name']);
  
  $form_state['onlinerecord_obj']->plan_id = $form_state['values']['plan_id'][(int)($num[1])];
  $form_state['onlinerecord_obj']->plan_header = $form_state['values']['plan_header'][(int)($num[1])];
  $form_state['onlinerecord_obj']->time_val=$form_state['values']['time_val'][(int)($num[1])];
  $form_state['onlinerecord_obj']->kvant_number=$form_state['values']['kvant_number'][(int)($num[1])];
}

function onlinerecord_step4_form(&$form, &$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];
  $default_name = !empty($onlinerecord_form->name) ? $onlinerecord_form->name : '';
   $form['name'] =  array(
      '#title' => t('FIO'),
      '#type' => 'textfield',
      '#default_value' =>$default_name,
    );
    /*
    $form['birthyear'] =  array(
      '#type' => 'textfield',
      '#title' => t('Date of birth'),
      '#default_value' =>'',
    );
    */
/*
    $form['submit'] =  array(
      '#type' => 'submit',
      '#value' => t('Save'),
      '#name' => 'savebutton',
      '#id' =>'savebutton_step3',
    );
  */
  $form_state['no buttons'] = TRUE;
}

function onlinerecord_step4_form_validate(&$form, &$form_state) {
    $recordname= $form_state['values']['name'];
    if (!$recordname) {
        form_set_error('name', t('Please enter your FIO.'));
    }
}

function onlinerecord_step4_form_submit(&$from, &$form_state) {
  $form_state['onlinerecord_obj']->name = $form_state['values']['name'];

}

function onlinerecord_wizard_submit(&$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];

    $choose_service_id=intval($onlinerecord_form->choose_service_id);
    $choose_date=$onlinerecord_form->choose_date;
    $result=db_query('Select redirect FROM {onlinerecord_services} where service_id=%d',$choose_service_id );
      $redirect = db_fetch_object($result);

    $plan_id=intval($onlinerecord_form->plan_id);
    $plan_header=$onlinerecord_form->plan_header;
    $time_val=intval($onlinerecord_form->time_val);
    $kvantn=intval($onlinerecord_form->kvant_number);
    $name=$onlinerecord_form->name;
    /*$birthyear=$form_state['values']['birthyear'];

    $result=db_query("INSERT INTO {onlinerecord_records}
      (recorddate,services_id,plan_id,kvant,name,birthyear)
      VALUES (%d,%d,%d,%d,'%s','%s')",
      strtotime($choose_date),$choose_service_id,$plan_id,$kvant_number,$name,$birthyear);
     */
    $result=db_query("INSERT INTO {onlinerecord_records}
      (recorddate,services_id,plan_id,kvant,name)
      VALUES (%d,%d,%d,%d,'%s')",
      strtotime($choose_date),$choose_service_id,$plan_id,$time_val,$name);
    $inserted_id=intval(db_result(db_query('SELECT LAST_INSERT_ID()')));
    //$num_id=$kvantn.'-'.$inserted_id;
    $num_id=$inserted_id;

    drupal_set_message(
      t('You\'ve been saved on time @time. @planh, your number is @num',
        array(
          '@time'=>strval((int)($time_val/3600)).":".str_pad(strval((int)(($time_val%3600)/60)),2,'0',STR_PAD_LEFT),//time in format hh:mm,
          '@planh'=>$plan_header,
          '@num'=>$num_id,
        )
      )
    );
    // Clear the cache
    ctools_object_cache_clear('onlinerecord_form_cache', $form_state['cache name']);
    $form_state['redirect']=$redirect->redirect;
}
/**
 * Callback for the proceed step
 */
function onlinerecord_wizard_next(&$form_state) {
  $onlinerecord_form = &$form_state['onlinerecord_obj'];
  $cache = ctools_object_cache_set('onlinerecord_form_cache', $form_state['cache name'], $onlinerecord_form );
}
/**
 * Callback generated when the 'cancel' button is clicked.
 * All we do here is clear the cache.
 */
function onlinerecord_wizard_cancel(&$form_state) {
  // Update the cache with changes.
  ctools_object_cache_clear('onlinerecord_form_cache', $form_state['cache name']);
  $form_state['redirect'] = 'onlinerecord2';
  drupal_set_message('Coward.');
}

function  onlinerecord_wizard_clear_page_cache($name) {
  ctools_object_cache_clear('onlinerecord_form_cache', $name);
}

/**
 * Get the cached changes to a given task handler.
 */
function onlinerecord_wizard_get_page_cache($name) {
  $cache = ctools_object_cache_get('onlinerecord_form_cache', $name);
  return $cache;
}

function onlinerecord_choose_callback3($choosed_date, $choose_service_id)
{
  $ch_t=strtotime($choosed_date);

  $result=db_query('SELECT p.plan_id, p.name AS planname, p.kvant_value, p.worktimestart, p.worktimefinish,
    d.name AS deptname, o.name AS orgname, p.enabled_date, p.disabled_date
    FROM {onlinerecord_plans_services} ps, {onlinerecord_plans} p, {onlinerecord_organizations} o, {onlinerecord_departments} d
    WHERE ps.plan_id=p.plan_id
    AND p.dept_id=d.dept_id AND d.org_id=o.org_id
    AND ps.service_id=%d
    AND p.enabled_date<=%d AND %d<=p.disabled_date',$choose_service_id,$ch_t,$ch_t);
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));

  $dateformat='Y-m-d';

  $i=0;
  $tableData =array();
  $tableHeader= array('pid', 'header_table','wts','wtf','kv','edate','ddate',
    'kvant_number', 'time', 'time_cmp','except_id', 'type','actions');
  $pids=array();

  while ($pid = db_fetch_object($result))
    {
        $arg=$pid->plan_id;
        //$header_table=$pid->planname." at ".$pid->deptname.", ".$pid->orgname;
        $header_table=t('@deptname , @orgname',
          array(
            '@deptname'  => $pid->deptname,
            '@orgname'  =>$pid->orgname)
        );
        $wts=$pid->worktimestart;
        $wtf=$pid->worktimefinish;
        $kvant_value=$pid->kvant_value;
        $edate=$pid->enabled_date;
        $ddate=$pid->disbled_date;
        {
        // Get all exceptions from choosen plan
          $result2=db_query("SELECT e.except_id, e.type, e.time_start, e.time_stop, e.daynumber, e.dateofexcept
            FROM {onlinerecord_exceptions} e
            WHERE e.plan_id in ('%s')
            ORDER BY plan_id",$arg);
          $j=0;
          $excepts=array();
          //exceptions to array
          while ($except = db_fetch_object($result2))
          {
            $excepts[$j++]=$except;
          }
          $exceptscount=$j;

          $result3=db_query("SELECT plan_id, kvant
            FROM {onlinerecord_records}
            WHERE plan_id in ('%s')
            AND recorddate=%d
            ORDER BY plan_id",$arg,$ch_t);
          $j=0;
          $records=array();
          //exceptions to array

          while ($record = db_fetch_object($result3))
          {
              $records[intval($record->kvant)]=true;
          }
          $n=($wtf-$wts)/($kvant_value*60);

          for ($k=0;$k<$n;$k++)
          {
            $temp=$wts+$k*$kvant_value*60;
            $flag=true;
            //check exceptions for current time
            $excepts_ids="";
            $excepts_types="";
            for ($j=0;$j<$exceptscount;$j++)
            {
              //get excepts date
              $tstart=intval($excepts[$j]->time_start);
              $tstop=intval($excepts[$j]->time_stop);
              $dn=intval($excepts[$j]->daynumber);
              $dateofe=intval($excepts[$j]->dateofexcept);

              //type of exceptions processing
              switch (intval($excepts[$j]->type)) {
                case 1:
                  // try beetwen exception time
                  if (($tstart<=$temp)&&($temp<=$tstop))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 2:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&($chd==$dn))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 5:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&(strtotime($choosed_date)==$dateofe))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
              }
            }
            $valuetoseeTD=0;
            if ($flag)
            {
                $valuetoseeTD=((!$records[$temp]) ? 1 :0);
            } else $valuetoseeTD=-1;
            //InputData
            $tableData[] = array(
              $arg,//plan_id
              $header_table,//dept org
              $wts,//work_time_start
              $wtf,//work_time_finish
              $kvant_value,
              $edate,//enabled date
              $ddate,//disabled date

              $k,// Kvant number
              strval((int)($temp/3600)).":".str_pad(strval((int)(($temp%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp,//time in seconds
              $excepts_ids,
              $excepts_types,
              (($flag)&&(!$records[$temp])) ? 1 :0,//time in seconds
              $valuetoseeTD,
            );
          }
        }
    }
    //dpm(array_search(0, array(-1,-1,-1)));
    usort($tableData,'onlinerecord_func_timecompare');
    $display_array=array();
    $flag=true;
    $counter=0;
    $counter2=0;
    $temp_time=-1;
    $i=0;
    //Sortirovka dannih
    $valuestosee_array=array();
    foreach ($tableData as $arr_str)
    {
        $i++;
        if ($arr_str[9]!=$temp_time) {
            $flag=false;

        }
        if ($flag)  {
            if ($arr_str[12]==1)    {
                $plans_ids_array[$counter]=$arr_str[0];
                $header_tables_array[$counter]=$arr_str[1];
                $counter++;
            }
            else $valuestosee_array[$counter2++]=$arr_str[13];
        } else {
            if ($temp_time!=-1)
                {
                $valtosave=0;
                if (!empty($plans_ids_array))
                    $valtosave=1;
                else {
                    if (array_search(0, $valuestosee_array)!=true) $valtosave=-1;
                    else $valtosave=0;
                }

                    $display_array[]=array(
                      $plans_ids_array,//plan_id
                      $header_tables_array,//dept org
                      strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
                      $temp_time,//time in seconds
                      $arr_str[7],//@TODO @BUG: different quants possible
                      $valtosave,
                      );
                }
            $flag=true;
            $counter=0;

            $plans_ids_array=array();//plan_id
            $header_tables_array=array();//plan display name
            $valuestosee_array=array();//

            $temp_time=$arr_str[9];
            if ($arr_str[12]==1)    {
              $plans_ids_array[$counter]=$arr_str[0];
              $header_tables_array[$counter]=$arr_str[1];
              $counter++;
            }
            else $valuestosee_array[$counter2++]=$arr_str[13];
        }
    }
    $valtosave=0;
    if (!empty($plans_ids_array))
        $valtosave=1;
    else {
        if (array_search(0, $valuestosee_array)!=true) $valtosave=-1;
        else $valtosave=0;
    }

    $display_array[]=array(
              $plans_ids_array,//plan_id
              $header_tables_array,//dept org
              strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp_time,//time in seconds
              $arr_str[7]+1,//@TODO @BUG: different quants possible
              $valtosave,
              );
    return $display_array;
}


function onlinerecordtest_callback1()
{
  drupal_json(array('status' => TRUE, 'data' => 'test'));
}
?>