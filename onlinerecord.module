<?php
// $Id$ 


function onlinerecord_menu()
{
  //@TODO @REFACTOR We need to change arg(n) calls in functions foo()
  //  to
  //function foo(n)
    $items=array();

    //Add main onlinerrecord settings pages
    $items['admin/settings/onlinerecord'] = array(
      'title' => 'OnlineRecord',
      'page callback' =>  'onlinerecord_form',
      //'page arguments' => array('onlinerecord_form'),
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
    );

    /////////////////////////// Organizations //////////////////////////////////
    //Add orgs main page
    $items['admin/settings/onlinerecord/orgs'] = array(
      'title' => 'OnlineRecord organizations',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_orgs_list',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add orgs add-page
    $items['admin/settings/onlinerecord/orgs/add'] = array(
      'title' => 'Add organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_add'),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add orgs edit-page
    $items['admin/settings/onlinerecord/orgs/%/edit'] = array(
      'title' => 'Edit organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_edit',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );
      
    //Add orgs delete-page
    $items['admin/settings/onlinerecord/orgs/%/delete'] = array(
      'title' => 'Delete organization',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_orgs_form_delete_confirm',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      
    );

    /////////////////////////// Departments ////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/depts'] = array(
      'title' => 'OnlineRecord departments',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_depts_list',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add depts add-page
    $items['admin/settings/onlinerecord/depts/add'] = array(
      'title' => 'Add department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_add'),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts edit-page
    $items['admin/settings/onlinerecord/depts/%/edit'] = array(
      'title' => 'Edit department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_edit',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts delete-page
    $items['admin/settings/onlinerecord/depts/%/delete'] = array(
      'title' => 'Delete department',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_depts_form_delete_confirm',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );
    //

    ////////////////////////////// Plans ///////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/plans'] = array(
      'title' => 'OnlineRecord Plans',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_plans_list',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add depts add-page
    $items['admin/settings/onlinerecord/plans/add'] = array(
      'title' => 'Add plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_add'),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts edit-page
    $items['admin/settings/onlinerecord/plans/%/edit'] = array(
      'title' => 'Edit plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_edit',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add depts delete-page
    $items['admin/settings/onlinerecord/plans/%/delete'] = array(
      'title' => 'Delete plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_delete_confirm',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    //////////////////////////// Exceptions ////////////////////////////////////
    //Add depts main page
    $items['admin/settings/onlinerecord/plans/%/exceptions'] = array(
      'title' => 'Exceptions1',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_exceptions_per_plan_list',4),
      //'page callback' =>  'onlinerecord_plans_list',
      'page callback' =>  'onlinerecord_exceptions_per_plan_list',
      'page arguments' => array(4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc'
    );

    $items['admin/settings/onlinerecord/plans/%/exceptions/add'] = array(
      'title' => 'Add exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_per_plan_add',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_add',
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => -10
    );

    $items['admin/settings/onlinerecord/exceptions'] = array(
      'title' => 'Exceptions1',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_exceptions_per_plan_list',4),
      //'page callback' =>  'onlinerecord_plans_list',
      'page callback' =>  'onlinerecord_exceptions_list',
      'page arguments' => array(4),
      'access arguments' => array('access content'),
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc'
    );

    $items['admin/settings/onlinerecord/exceptions/%/edit'] = array(
      'title' => 'Edit exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_edit',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_add',
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => -5
    );

    $items['admin/settings/onlinerecord/exceptions/%/delete'] = array(
      'title' => 'Delete exception',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_exceptions_form_delete_confirm',4),
      //'page callback' =>  'onlinerecord_exceptions_per_plan_delete',
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
      'weight' => 0
    );
    //////////////////////////////////Services//////////////////////////////////
     //Add services main page
    $items['admin/settings/onlinerecord/services'] = array(
      'title' => 'OnlineRecord services',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_services_list',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add services add-page
    $items['admin/settings/onlinerecord/services/add'] = array(
      'title' => 'Add service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_add'),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services edit-page
    $items['admin/settings/onlinerecord/services/%/edit'] = array(
      'title' => 'Edit service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_edit',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services delete-page
    $items['admin/settings/onlinerecord/services/%/delete'] = array(
      'title' => 'Delete service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_services_form_delete_confirm',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    ///////////////////////////////PLANS - SERVICES/////////////////////////////
     //Add services main page
    $items['admin/settings/onlinerecord/plans_services'] = array(
      'title' => 'OnlineRecord services',
      //'page callback' => 'drupal_get_form',
      //'page arguments' => array('onlinerecord_organizations_list'),
      'page callback' =>  'onlinerecord_plans_services_list',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc'
    );

    //Add services add-page
    $items['admin/settings/onlinerecord/plans_services/add'] = array(
      'title' => 'Add service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_services_form_add'),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );

    //Add services delete-page
    $items['admin/settings/onlinerecord/plans_services/%/%/delete'] = array(
      'title' => 'Delete service',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_services_form_delete_confirm',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',

    );

    //Plans
    $items['admin/settings/onlinerecord/plans/%/view'] = array(
      'title' => 'View plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_view',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'onlinerecord.admin.inc',
    );
    $items['admin/settings/onlinerecord/plans/%/view/callback1'] = array(
      'page callback' => 'onlinerecord_plans_form_view_callback1',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );
    $items['admin/settings/onlinerecord/plans/%/view/callback2'] = array(
      'page callback' => 'onlinerecord_plans_form_view_callback2',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );

    //Cloning plans with all exceptions
    $items['admin/settings/onlinerecord/plans/%/clone'] = array(
      'title' => 'Edit plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_plans_form_clone',4),
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK,
      // 'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );


    /////////////////CHOOSE Service->Plans->Exceptions->records/////////////////
    $items['onlinerecord'] = array(
      'title' => 'Onlinerecord',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('onlinerecord_choose'),
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'onlinerecord.admin.inc',
    );
    /*
    $items['onlinerecord/callback1'] = array(
      'page callback' => 'onlinerecord_choose_callback1',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );
    $items['onlinerecord/callback2'] = array(
      'page callback' => 'onlinerecord_choose_callback2',
      'access callback' => TRUE,
      'file' => 'onlinerecord.admin.inc',
      'type' => MENU_CALLBACK,
    );
     *
     */
    return $items;
}

/**
 * Does the very standard things that must be done in any normal callback.
 * Used by each callback in this example module.
 */
function onlinerecord_form()
{
    $tableHeader = array('Onlinerecord');
    $tableData = array();
    $tableData[] = array(l('Orgs' , 'admin/settings/onlinerecord/orgs/',array('alias'=>true)));
    $tableData[] = array(l('Depts' , 'admin/settings/onlinerecord/depts/',array('alias'=>true)));
    $tableData[] = array(l('Plans' , 'admin/settings/onlinerecord/plans/',array('alias'=>true)));
    $tableData[] = array(l('Exceptions' , 'admin/settings/onlinerecord/exceptions/',array('alias'=>true)));
    $tableData[] = array(l('Services' , 'admin/settings/onlinerecord/services/',array('alias'=>true)));
    $tableData[] = array(l('Plans-Services' , 'admin/settings/onlinerecord/plans_services/',array('alias'=>true)));
    
    return theme('table', $tableHeader, $tableData);
}

function onlinerecord_choose($form_state)
{
  // Check third page
  if (isset($form_state['storage']['page_three']))
  {
    $form['name'] =  array(
      '#type' => 'textfield',
      '#title' => t('FIO'),
      '#default_value' =>'',
    );
    $form['birthyear'] =  array(
      '#type' => 'textfield',
      '#title' => t('birth year'),
      '#default_value' =>'',
    );

    $form['submit'] =  array(
      '#type' => 'submit',
      '#value' => 'save',
      '#name' => 'savebutton',
    );

   
    // Check second page
  } else {

    if (isset($form_state['storage']['page_two'])) {
        $vals=onlinerecord_choose_callback2();
        $i=0;
        $form=array();

        $form['header'] = array(
          '#type' => 'value',
          '#value' => array(
             array('data' => 'Время', 'field' => 'time'),
             array('data' => 'Заголовок', 'field' => 'time_value'),
             array('data' => 'Дата создания', 'field' => 'kvant_number', 'sort' => 'asc'),
             array('data' => 'button', 'field' => 'button'),
          ),
        );
        //$form['plan_id']=array();
        //
        //$form['plan_header']=array();
        $plans=array();
        $form['plan_id']['#tree']=TRUE;
        $form['plan_header']['#tree']=TRUE;
        $form['time_val']['#tree']=TRUE;
        foreach ($vals as $val)
        {
          
          $form['plan_id'][$val[4]] = array('#type' => 'value','#value' =>$val[0][0]);
          $form['plan_header'][$val[4]] = array('#type' => 'value','#value' =>$val[1][0]);
          $form['time_val'][$val[4]] = array('#type' => 'value','#value' => $val[3]);
          

          $form['time'][$val[4]] = array('#value' =>$val[2]);
          $form['time_value'][$val[4]] = array('#value' => $val[3]);
          $form['kvant_number'][$val[4]] = array('#value' => $val[4]);
          if (!empty($val[0]))
          {
            $form['button'][$val[4]] =  array(
                '#type' => 'submit',
                '#value' => 'save',
                '#name' => 'button_'.$val[4]
            );
          } else {
            $form['button'][$val[4]] =  array('#value' => "-");
          }
          $i++;
        }
        //$form['plan_id']=array('#type' => 'value','#value' =>$plans());
    } else // this is first page
    {
        $result=db_query('SELECT service_id, name, cabinet FROM {onlinerecord_services}');

        $services=array();
        $services[0]='---';
        $i=0;
        while ($service=db_fetch_array($result)) {
          $i=intval($service['service_id']);
          $services[$i]=$service['name'];
        }

        $default_choose_service_id = !empty($form_state['values']['choose_service_id']) ? $form_state['values']['choose_service_id'] : 0;
        $form['choose_service_id'] = array(
          '#title' => t('Select service'),
          '#type' => 'select',
          '#options' => $services,
          '#default_value' => $default_choose_service_id,

        );
        $dateformat='Y-m-d';
        $datef=date($dateformat);

        $form['choose_date'] = array(
          '#title' => t('Enabled on'),
          '#type' => 'date_select',
          '#default_value' => $datef,
          '#date_format' => $dateformat,
          '#date_timezone' => 'Asia/Novosibirsk',
          '#date_increment' => $kvant_value,
          '#date_year_range' => '0:+1',
          '#attributes' => array('class' => 'date-dropdown'),
        );

        $form['next'] = array(
          '#type' => 'submit',
          '#value' => 'Next >>',
          '#name' => 'NextButton'
        );
    }
  }

  return $form;

}



function onlinerecord_choose_submit($form, &$form_state)
{
  $num=explode('-',$form_state['clicked_button']['#id']);
  dpm($form_state['clicked_button']['#id']);
  // Second submit
  //if ($form_state['clicked_button']['#id'] == 'edit-'.(int)($num[1]).'-'.$num[2])
  if ($form_state['clicked_button']['#id'] == 'edit-'.(int)($num[1]))
  {
    dpm("3");
    $form_state['storage']['page_three'] = TRUE;
    $page_one_values = $form_state['storage']['page_one_values'];
    $form_state['storage']['page_two_values'] = $form_state['values'];
    $form_state['storage']['pressed_button'] = (int)($num[1]);

    $form_state['storage']['plan_id'] = $form_state['values']['plan_id'][(int)($num[1])];
    $form_state['storage']['plan_header'] = $form_state['values']['plan_header'][(int)($num[1])];
    $form_state['storage']['time_val']=$form_state['values']['time_val'][(int)($num[1])];

  } // First submit server
  elseif($form_state['clicked_button']['#id'] == 'edit-next') {
    $form_state['storage']['page_two'] = TRUE; // We set this to determine
                                               // which elements to display
                                               // when the page reloads.

    // Values below in the $form_state['storage'] array are saved
    // to carry forward to subsequent pages in the form.
    $form_state['storage']['page_one_values'] = $form_state['values'];

    unset($form_state['clicked_button']);

  }
  // Handle page 2 submissions.
  else
  {
    $page_one_values = $form_state['storage']['page_one_values'];
    $page_two_values = $form_state['storage']['page_two_values'];
    dpm ($page_one_values);
    dpm ($page_two_values);

    $choose_service_id=intval($page_one_values['choose_service_id']);
    $choose_date=$page_one_values['choose_date'];

    $plan_id=intval($form_state['storage']['plan_id']);
    $plan_header=$form_state['storage']['plan_header'];
    $kvant_number=intval($form_state['storage']['time_val']);
    dpm($form_state['storage']['time_val']);

    $name=$form_state['values']['name'];
    $birthyear=$form_state['values']['birthyear'];



    $result=db_query("INSERT INTO {onlinerecord_records} 
      (recorddate,services_id,plan_id,kvant,name,birthyear)
      VALUES (%d,%d,%d,%d,'%s','%s')",
      strtotime($choose_date),$choose_service_id,$plan_id,$kvant_number,name,birthyear);
  }
}

function onlinerecord_choose_callback2()
{
  //$arg=check_plain(arg(4));
  $choosed_date='---';
  if (isset($_POST['choose_date']))
    $choosed_date=check_plain($_POST['choose_date']['year']).'-'.$_POST['choose_date']['month'].'-'.$_POST['choose_date']['day'];
  if (isset($_POST['choose_service_id']))
    $choose_service_id=intval($_POST['choose_service_id']);
  $ch_t=strtotime($choosed_date);

  $result=db_query('SELECT p.plan_id, p.name AS planname, p.kvant_value, p.worktimestart, p.worktimefinish,
    d.name AS deptname, o.name AS orgname, p.enabled_date, p.disabled_date
    FROM {onlinerecord_plans_services} ps, {onlinerecord_plans} p, {onlinerecord_organizations} o, {onlinerecord_departments} d
    WHERE ps.plan_id=p.plan_id
    AND p.dept_id=d.dept_id AND d.org_id=o.org_id
    AND ps.service_id=%d
    AND p.enabled_date<=%d AND %d<=p.disabled_date',$choose_service_id,$ch_t,$ch_t);
  if ($choosed_date!="")
    $chd=date('N',strtotime($choosed_date));

  $dateformat='Y-m-d';

  $i=0;
  $tableData =array();
  $tableHeader= array('pid', 'header_table','wts','wtf','kv','edate','ddate',
    'kvant_number', 'time', 'time_cmp','except_id', 'type','actions');
  $pids=array();

  while ($pid = db_fetch_object($result))
    {
      //$pids[$i++]=$pid['plan_id'];
      
        $arg=$pid->plan_id;
        $header_table=$pid->planname." at ".$pid->deptname.", ".$pid->orgname;
        $wts=$pid->worktimestart;
        $wtf=$pid->worktimefinish;
        $kvant_value=$pid->kvant_value;
        $edate=$pid->enabled_date;
        $ddate=$pid->disbled_date;

        {
        // Get all exceptions from choosen plan
          $result2=db_query("SELECT e.except_id, e.type, e.time_start, e.time_stop, e.daynumber, e.dateofexcept
            FROM {onlinerecord_exceptions} e
            WHERE e.plan_id in ('%s')
            ORDER BY plan_id",$arg);
          $j=0;
          $excepts=array();
          //exceptions to array
          while ($except = db_fetch_object($result2))
          {
            $excepts[$j++]=$except;
          }
          $exceptscount=$j;

          $result3=db_query("SELECT plan_id, kvant
            FROM {onlinerecord_records} 
            WHERE plan_id in ('%s')
            AND recorddate=%d
            ORDER BY plan_id",$arg,$ch_t);
          $j=0;
          $records=array();
          //exceptions to array
          
          while ($record = db_fetch_object($result3))
          {

            //$records[intval($record->plan_id)][intval($record->kvant)]=true;
              $records[intval($record->kvant)]=true;
          }
          //dpm('time='.$ch_t.', arg='.$arg.',records');
          //dpm($records);
          //preparing count of kvants
          $n=($wtf-$wts)/($kvant_value*60);

          for ($k=0;$k<$n;$k++)
          {
            $temp=$wts+$k*$kvant_value*60;
            $flag=true;
            //check exceptions for current time
            $excepts_ids="";
            $excepts_types="";
            for ($j=0;$j<$exceptscount;$j++)
            {
              //get excepts date


              $tstart=intval($excepts[$j]->time_start);
              $tstop=intval($excepts[$j]->time_stop);
              $dn=intval($excepts[$j]->daynumber);
              $dateofe=intval($excepts[$j]->dateofexcept);

              //type of exceptions processing
              switch (intval($excepts[$j]->type)) {
                case 1:
                  // try beetwen exception time
                  if (($tstart<=$temp)&&($temp<=$tstop))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 2:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&($chd==$dn))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
                case 5:
                  if (($tstart<=$temp)&&($temp<=$tstop)&&(strtotime($choosed_date)==$dateofe))
                  {
                    $flag=false;
                    $excepts_ids=$excepts_ids." ". l($excepts[$j]->except_id,'admin/settings/onlinerecord/exceptions/'.$excepts[$j]->except_id.'/edit/');
                    $excepts_types=$excepts_types." ". $excepts[$j]->type.',';
                  }
                  break;
              }
              //if ($flag!=true) break;
            }

            //InputData

            $tableData[] = array(
              $arg,//plan_id
              $header_table,//dept org
              $wts,//work_time_start
              $wtf,//work_time_finish
              $kvant_value,
              $edate,//enabled date
              $ddate,//disabled date

              $k,// Kvant number
              strval((int)($temp/3600)).":".str_pad(strval((int)(($temp%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp,//time in seconds
              $excepts_ids,
              $excepts_types,
              //$choosed_date,
              //strtotime($choosed_date),
              (($flag)&&(!$records[$k])) ? 1 :0,//time in seconds
            );
          }
        }
    }
    
    usort($tableData,'func_timecompare');
    $display_array=array();
    $flag=true;
    $counter=0;
    $temp_time=-1;
    $i=0;
    //Sortirovka dannih
    foreach ($tableData as $arr_str)
    {
        $i++;
        //$temp_time;
        if ($arr_str[9]!=$temp_time) {
            $flag=false;
            
        }
        if ($flag)  {
            if ($arr_str[12]==1)    {
                $plans_ids_array[$counter]=$arr_str[0];
                $header_tables_array[$counter]=$arr_str[1];
                $counter++;
            }
        } else {
            if ($temp_time!=-1)
                {
                    $display_array[]=array(
                      $plans_ids_array,//plan_id
                      $header_tables_array,//dept org
                      //$wts,//work_time_start
                      //$wtf,//work_time_finish
                      //$kvant_value,
                      //$edate,//enabled date
                      //$ddate,//disabled date

                      //$k,// Kvant number
                      strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
                      //$time_values_array,
                      $temp_time,//time in seconds
                      $arr_str[7],//@TODO BUG: different quants possible
                      //$excepts_ids_arrays,
                      //$excepts_types_arrays,
                      //$choosed_date,
                      //strtotime($choosed_date),
                      //($flag) ? 1 :0,//time in seconds

                      );
                }
            $flag=true;
            $counter=0;

            $plans_ids_array=array();//plan_id
            $header_tables_array=array();//plan display name

            $temp_time=$arr_str[9];
            if ($arr_str[12]==1)    {
              $plans_ids_array[$counter]=$arr_str[0];
              $header_tables_array[$counter]=$arr_str[1];
              $counter++;
            }
        }
    }
    $display_array[]=array(
              $plans_ids_array,//plan_id
              $header_tables_array,//dept org
              strval((int)($temp_time/3600)).":".str_pad(strval((int)(($temp_time%3600)/60)),2,'0',STR_PAD_LEFT),     //time in format hh:mm
              $temp_time,//time in seconds
              $arr_str[7]+1,//@TODO BUG: different quants possible

              );
    //($tableData,'func_timecompare');
    //array_multisort($tableData[9],SORT_ASC);

    return $display_array;
  //drupal_json(array('status' => TRUE, 'data' => theme('table', $tableHeader, $display_array)));
  //drupal_json(array('status' => TRUE, 'data' => theme('table', $tableHeader, $tableData)));
  //$pids_str=implode(',',$pids['plan_id']);

}

function func_timecompare($val1,$val2)
{
  if ($val1[9]==$val2[9]) return 0;
  else return ($val1[9]<$val2[9]) ? -1 :1;
}



/**
 * Реализация hook_theme()
 * Регистрируем функцию темизации формы mymodule_form_table
 */

function onlinerecord_theme() {
  return array(
    'onlinerecord_choose' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function theme_onlinerecord_choose($form) {
  $rows = array();
  foreach (element_children($form['kvant_number']) as $key) {
    $rows[] = array(
      drupal_render($form['time'][$key]),
      drupal_render($form['time_value'][$key]),   // заголовок
      drupal_render($form['kvant_number'][$key]), // дата создания
      drupal_render($form['button'][$key])
    );
  }

  $output = theme('table', $form['header']['#value'], $rows); // выводим таблицу
  $output .= drupal_render($form);                            // выводим остальную часть формы

  return $output;
}
?>